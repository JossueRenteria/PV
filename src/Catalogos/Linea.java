/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Catalogos;

import Utilerias.Conexion;
import java.sql.*;
import javax.swing.*;

/**
 *
 * @author JossuéEslí
 */
public class Linea extends javax.swing.JFrame {
    public Conexion enlace;
    public Lineas padre;
    private String accion;
    /**
     * Creates new form Linea
     */
    public Linea() {
        initComponents();
    }

    Linea(int aInt, String string) {
        throw new UnsupportedOperationException("Not yet implemented");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        text_id = new javax.swing.JTextField();
        text_nombre = new javax.swing.JTextField();
        btn_aceptar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("ID");

        jLabel2.setText("Nombre");

        btn_aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Catalogos/GuardarTodo.png"))); // NOI18N
        btn_aceptar.setText("Aceptar");
        btn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarActionPerformed(evt);
            }
        });

        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Catalogos/Cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_cancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(36, 36, 36)
                                .addComponent(text_id, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(text_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 15, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(text_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(text_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_aceptar)
                    .addComponent(btn_cancelar))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-305)/2, (screenSize.height-209)/2, 305, 209);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // salir del dialogo o frame:
        this.dispose();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed
        // Se invoca a establecer la edicion, insercin o eliminacion:
        if(accion.equals("EDITAR")){
            Editar();
        }
        if(accion.equals("ELIMINAR")){
            Eliminar();
        }
        if(accion.equals("INSERTAR")){
            Insertar();
        } 
    }//GEN-LAST:event_btn_aceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Linea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Linea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Linea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Linea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Linea().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_aceptar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField text_id;
    private javax.swing.JTextField text_nombre;
    // End of variables declaration//GEN-END:variables
    public void configurarPara(String accion){
        if(accion.equals("EDITAR")){
            this.accion = accion;
            habilitarCampos(true);
            text_nombre.requestFocus();
            text_id.setEditable(false);

        }
        if(accion.equals("ELIMINAR")){
            habilitarCampos(false);
            this.accion = accion;
            text_id.setEditable(false);
        }
        if(accion.equals("INSERTAR")){
            limpiarCapos();
            habilitarCampos(true);
            text_id.setEditable(false);
            text_nombre.requestFocus();
            this.accion = accion;
        }
     }  
    private void limpiarCapos() {
        text_id.setText("");
        text_nombre.setText("");
    }
    private void habilitarCampos(boolean estado){
        text_nombre.setEditable(estado);
    }
    public void cargarCampos(String id){
        enlace.EjecutarSQL("SELECT * FROM Linea WHERE id="+id);
        try{
            enlace.datos.next();
            text_id.setText(enlace.datos.getString("id"));
            text_nombre.setText(enlace.datos.getString("nombre"));
        }catch(SQLException Error){
            JOptionPane.showMessageDialog(null, Error.getMessage(), 
                    "Error", JOptionPane.ERROR_MESSAGE);        
        }
    }
    private void Editar(){
        //Aqui vamos a mandar la informacion de la base de datos
        
        //Preparamos una sentencia de actualizacion
        String query = "UPDATE Linea SET nombre=? "+
                       "WHERE id="+text_id.getText();
        enlace.ordenEditar = null;
        //iniciamos la transaccion
        try{
            enlace.ordenEditar = enlace.conexion.prepareStatement(query);
            enlace.ordenEditar.setString(1, text_nombre.getText());
           
            //escribir en la base de datos
            enlace.ordenEditar.executeUpdate();
            
            //Refrescar los datos y cerrar dialogo
            enlace.EjecutarSQL("SELECT * FROM Linea");
            padre.cargarTabla();
            this.dispose();
         
        }catch(SQLException Error){
            //si algo salio mal
            JOptionPane.showMessageDialog(this, Error.getMessage(),
                                          "Error", JOptionPane.ERROR_MESSAGE);
        }         //aqui me quedé
    }
    private void Eliminar(){
        //Aqui vamos a confirmar la eliminacion
        int Respuesta = JOptionPane.showConfirmDialog(this,
                        "Realmente desea borrar el registro?",
                        "Confirmar Eliminacion", JOptionPane.YES_NO_OPTION);
        if(Respuesta == 1)
            return;
        
        String query = "DELETE FROM Linea "+
                       "WHERE id = ?";
        enlace.ordenEditar=null;
        //inicia la transaccion
        try{
            enlace.ordenEditar = enlace.conexion.prepareStatement(query);
            enlace.ordenEditar.setString(1, text_id.getText());
            enlace.ordenEditar.executeUpdate();
            //Se refresca los datos del JTable
            enlace.EjecutarSQL("SELECT * FROM Linea");
            padre.cargarTabla();
            this.dispose();
        }catch(SQLException Error){
            //si algo salio mal
            JOptionPane.showMessageDialog(this, Error.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);                   
        }    
    }
    private void Insertar(){
        //primero preparamos la sentencia de insercion
        String query = "INSERT INTO Linea (nombre) "
                        +"VALUES(?)";
        
        enlace.ordenEditar = null;
        
        //Iniciar la transaccion
        try{
            enlace.ordenEditar = enlace.conexion.prepareStatement(query);
            enlace.ordenEditar.setString(1, text_nombre.getText());
            
            enlace.ordenEditar.executeUpdate();
            //Refrescar los datos del JTable
            enlace.EjecutarSQL("SELECT * FROM Linea");
            padre.cargarTabla();
            this.dispose();
        }catch(SQLException Error){
            //si algo salio mal
            JOptionPane.showMessageDialog(this, Error.getMessage(),
                                           "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }
}//fin de la clase